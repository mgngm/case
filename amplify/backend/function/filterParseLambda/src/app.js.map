{
  "version": 3,
  "sources": ["../../../../../lambda/filterParse/app.ts"],
  "sourcesContent": ["/* eslint-disable @typescript-eslint/no-var-requires */\n/*\nCopyright 2017 - 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with the License. A copy of the License is located at\n    http://aws.amazon.com/apache2.0/\nor in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and limitations under the License.\n*/\n\nimport type { Express } from 'express';\n\nconst awsServerlessExpressMiddleware = require('aws-serverless-express/middleware');\nconst bodyParser = require('body-parser');\nconst express = require('express');\n\n// declare a new express app\nconst app: Express = express();\napp.use(bodyParser.json());\napp.use(awsServerlessExpressMiddleware.eventContext());\n\n// Enable CORS for all methods\napp.use(function (req, res, next) {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Headers', '*');\n  next();\n});\n\n/**********************\n * Example get method *\n **********************/\n\napp.get('/item', function (req, res) {\n  // Add your code here\n  res.json({ success: 'get call succeed!', url: req.url });\n});\n\n/****************************\n * Example post method *\n ****************************/\n\napp.post('/filter-parse', function (req, res) {\n  // Add your code here\n  res.json({ success: 'post call succeed!', url: req.url, body: req.body });\n});\n\napp.post('/filter-parse/', function (req, res) {\n  // Add your code here\n  res.json({ success: 'post call succeed!', url: req.url, body: req.body });\n});\n\napp.listen(3000, function () {\n  console.log('App started');\n});\n\n// Export the app object. When executing the application local this does nothing. However,\n// to port it to AWS Lambda we will create a wrapper around that will load the app from\n// this file\nexport default app;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,IAAM,iCAAiC,QAAQ;AAC/C,IAAM,aAAa,QAAQ;AAC3B,IAAM,UAAU,QAAQ;AAGxB,IAAM,MAAe,QAAQ;AAC7B,IAAI,IAAI,WAAW,KAAK,CAAC;AACzB,IAAI,IAAI,+BAA+B,aAAa,CAAC;AAGrD,IAAI,IAAI,SAAU,KAAK,KAAK,MAAM;AAChC,MAAI,OAAO,+BAA+B,GAAG;AAC7C,MAAI,OAAO,gCAAgC,GAAG;AAC9C,OAAK;AACP,CAAC;AAMD,IAAI,IAAI,SAAS,SAAU,KAAK,KAAK;AAEnC,MAAI,KAAK,EAAE,SAAS,qBAAqB,KAAK,IAAI,IAAI,CAAC;AACzD,CAAC;AAMD,IAAI,KAAK,iBAAiB,SAAU,KAAK,KAAK;AAE5C,MAAI,KAAK,EAAE,SAAS,sBAAsB,KAAK,IAAI,KAAK,MAAM,IAAI,KAAK,CAAC;AAC1E,CAAC;AAED,IAAI,KAAK,kBAAkB,SAAU,KAAK,KAAK;AAE7C,MAAI,KAAK,EAAE,SAAS,sBAAsB,KAAK,IAAI,KAAK,MAAM,IAAI,KAAK,CAAC;AAC1E,CAAC;AAED,IAAI,OAAO,KAAM,WAAY;AAC3B,UAAQ,IAAI,aAAa;AAC3B,CAAC;AAKD,IAAO,cAAQ;",
  "names": []
}
